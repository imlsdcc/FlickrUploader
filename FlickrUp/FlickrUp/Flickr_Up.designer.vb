'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.225
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict On
Option Explicit On

Imports System
Imports System.Collections.Generic
Imports System.ComponentModel
Imports System.Data
Imports System.Data.Linq
Imports System.Data.Linq.Mapping
Imports System.Linq
Imports System.Linq.Expressions
Imports System.Reflection


<Global.System.Data.Linq.Mapping.DatabaseAttribute(Name:="IMLSHarvest_B")>  _
Partial Public Class Flickr_UpDataContext
	Inherits System.Data.Linq.DataContext
	
	Private Shared mappingSource As System.Data.Linq.Mapping.MappingSource = New AttributeMappingSource()
	
  #Region "Extensibility Method Definitions"
  Partial Private Sub OnCreated()
  End Sub
  Partial Private Sub InsertFlickr(instance As Flickr)
    End Sub
  Partial Private Sub UpdateFlickr(instance As Flickr)
    End Sub
  Partial Private Sub DeleteFlickr(instance As Flickr)
    End Sub
  #End Region
	
	Public Sub New()
		MyBase.New(Global.FlickrUp.My.MySettings.Default.IMLSHarvest_BConnectionString, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public ReadOnly Property Flickrs() As System.Data.Linq.Table(Of Flickr)
		Get
			Return Me.GetTable(Of Flickr)
		End Get
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Flickr")>  _
Partial Public Class Flickr
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _id As Integer
	
	Private _identifier As String
	
	Private _photoID As String
	
	Private _dateUpload As System.Nullable(Of Date)
	
	Private _oai_datestamp As System.Nullable(Of Date)
	
	Private _title As String
	
	Private _creator As String
	
	Private _description As String
	
	Private _date_taken As String
	
	Private _license As String
	
	Private _tags As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnidChanging(value As Integer)
    End Sub
    Partial Private Sub OnidChanged()
    End Sub
    Partial Private Sub OnidentifierChanging(value As String)
    End Sub
    Partial Private Sub OnidentifierChanged()
    End Sub
    Partial Private Sub OnphotoIDChanging(value As String)
    End Sub
    Partial Private Sub OnphotoIDChanged()
    End Sub
    Partial Private Sub OndateUploadChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OndateUploadChanged()
    End Sub
    Partial Private Sub Onoai_datestampChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub Onoai_datestampChanged()
    End Sub
    Partial Private Sub OntitleChanging(value As String)
    End Sub
    Partial Private Sub OntitleChanged()
    End Sub
    Partial Private Sub OncreatorChanging(value As String)
    End Sub
    Partial Private Sub OncreatorChanged()
    End Sub
    Partial Private Sub OndescriptionChanging(value As String)
    End Sub
    Partial Private Sub OndescriptionChanged()
    End Sub
    Partial Private Sub Ondate_takenChanging(value As String)
    End Sub
    Partial Private Sub Ondate_takenChanged()
    End Sub
    Partial Private Sub OnlicenseChanging(value As String)
    End Sub
    Partial Private Sub OnlicenseChanged()
    End Sub
    Partial Private Sub OntagsChanging(value As String)
    End Sub
    Partial Private Sub OntagsChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property id() As Integer
		Get
			Return Me._id
		End Get
		Set
			If ((Me._id = value)  _
						= false) Then
				Me.OnidChanging(value)
				Me.SendPropertyChanging
				Me._id = value
				Me.SendPropertyChanged("id")
				Me.OnidChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_identifier", DbType:="NVarChar(250) NOT NULL", CanBeNull:=false)>  _
	Public Property identifier() As String
		Get
			Return Me._identifier
		End Get
		Set
			If (String.Equals(Me._identifier, value) = false) Then
				Me.OnidentifierChanging(value)
				Me.SendPropertyChanging
				Me._identifier = value
				Me.SendPropertyChanged("identifier")
				Me.OnidentifierChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_photoID", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property photoID() As String
		Get
			Return Me._photoID
		End Get
		Set
			If (String.Equals(Me._photoID, value) = false) Then
				Me.OnphotoIDChanging(value)
				Me.SendPropertyChanging
				Me._photoID = value
				Me.SendPropertyChanged("photoID")
				Me.OnphotoIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dateUpload", DbType:="Date")>  _
	Public Property dateUpload() As System.Nullable(Of Date)
		Get
			Return Me._dateUpload
		End Get
		Set
			If (Me._dateUpload.Equals(value) = false) Then
				Me.OndateUploadChanging(value)
				Me.SendPropertyChanging
				Me._dateUpload = value
				Me.SendPropertyChanged("dateUpload")
				Me.OndateUploadChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_oai_datestamp", DbType:="Date")>  _
	Public Property oai_datestamp() As System.Nullable(Of Date)
		Get
			Return Me._oai_datestamp
		End Get
		Set
			If (Me._oai_datestamp.Equals(value) = false) Then
				Me.Onoai_datestampChanging(value)
				Me.SendPropertyChanging
				Me._oai_datestamp = value
				Me.SendPropertyChanged("oai_datestamp")
				Me.Onoai_datestampChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_title", DbType:="NVarChar(512)")>  _
	Public Property title() As String
		Get
			Return Me._title
		End Get
		Set
			If (String.Equals(Me._title, value) = false) Then
				Me.OntitleChanging(value)
				Me.SendPropertyChanging
				Me._title = value
				Me.SendPropertyChanged("title")
				Me.OntitleChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_creator", DbType:="NVarChar(250)")>  _
	Public Property creator() As String
		Get
			Return Me._creator
		End Get
		Set
			If (String.Equals(Me._creator, value) = false) Then
				Me.OncreatorChanging(value)
				Me.SendPropertyChanging
				Me._creator = value
				Me.SendPropertyChanged("creator")
				Me.OncreatorChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_description", DbType:="Text", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property description() As String
		Get
			Return Me._description
		End Get
		Set
			If (String.Equals(Me._description, value) = false) Then
				Me.OndescriptionChanging(value)
				Me.SendPropertyChanging
				Me._description = value
				Me.SendPropertyChanged("description")
				Me.OndescriptionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_date_taken", DbType:="NVarChar(50)")>  _
	Public Property date_taken() As String
		Get
			Return Me._date_taken
		End Get
		Set
			If (String.Equals(Me._date_taken, value) = false) Then
				Me.Ondate_takenChanging(value)
				Me.SendPropertyChanging
				Me._date_taken = value
				Me.SendPropertyChanged("date_taken")
				Me.Ondate_takenChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_license", DbType:="NVarChar(50)")>  _
	Public Property license() As String
		Get
			Return Me._license
		End Get
		Set
			If (String.Equals(Me._license, value) = false) Then
				Me.OnlicenseChanging(value)
				Me.SendPropertyChanging
				Me._license = value
				Me.SendPropertyChanged("license")
				Me.OnlicenseChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_tags", DbType:="NVarChar(512)")>  _
	Public Property tags() As String
		Get
			Return Me._tags
		End Get
		Set
			If (String.Equals(Me._tags, value) = false) Then
				Me.OntagsChanging(value)
				Me.SendPropertyChanging
				Me._tags = value
				Me.SendPropertyChanged("tags")
				Me.OntagsChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class
